import{_ as e,c as t,a0 as o,o as r}from"./chunks/framework.CGHvQLJz.js";const i="/assets/a4.aU-EJlFq.png",h=JSON.parse('{"title":"鸿蒙ArkUI-X已更新适配API13啦","description":"","frontmatter":{},"headers":[],"relativePath":"鸿蒙ArkUI-X已更新适配API13啦.md","filePath":"鸿蒙ArkUI-X已更新适配API13啦.md","lastUpdated":null}'),l={name:"鸿蒙ArkUI-X已更新适配API13啦.md"};function n(s,a,d,c,A,p){return r(),t("div",null,a[0]||(a[0]=[o('<h1 id="鸿蒙arkui-x已更新适配api13啦" tabindex="-1">鸿蒙ArkUI-X已更新适配API13啦 <a class="header-anchor" href="#鸿蒙arkui-x已更新适配api13啦" aria-label="Permalink to &quot;鸿蒙ArkUI-X已更新适配API13啦&quot;">​</a></h1><p><img src="'+i+'" alt="alt text"> ArkUI-X 5.0.1 Release版配套OpenHarmony 5.0.1 Rlease，API 13，新增适配部分API 13接口支持跨平台；框架能力进一步完善，支持Android应用非压缩模式，支持Android Fragment对接跨平台。ACE Tools工具易用性提升，支持创建module时选择module类型、config提示优化和联动编译。组件跨平台能力进一步增强，新增XComponent组件支持跨平台。</p><h2 id="应用框架特性增强" tabindex="-1">应用框架特性增强 <a class="header-anchor" href="#应用框架特性增强" aria-label="Permalink to &quot;应用框架特性增强&quot;">​</a></h2><p>这次更新新增支持Android平台Fragment对接跨平台，之前的版本只支持Activity对接，这次增加了对Fragment的支持，将使ArkUI-X在Android平台的灵活性大大增强。之前的Activity方式只能独占一个页面，这次可以用Fragment的方式和原生页面共存，这在实际的应用开发过程中，可以有更多的场景用ArkUI-X来完成。这次还支持Android应用非压缩模式（useLegacyPacking等于false 或 android:extractNativeLibs等于false场景），支持Activity和ViewController销毁时，框架自动对API插件进行内存回收，在开发过程中，我们不用再时刻盯着Activity（ViewController）有没有释放，内存有没有回收了，可以将更多的精力放在业务功能的开发中。这次还新增支持设置沉浸式及获取状态栏等避让区域信息，这使我们的页面更加协调，不会因为状态栏无法适配，而显示页面很突兀了。</p><h2 id="ace-tools的增强" tabindex="-1">ACE Tools的增强 <a class="header-anchor" href="#ace-tools的增强" aria-label="Permalink to &quot;ACE Tools的增强&quot;">​</a></h2><ul><li>支持创建module时选择module类型</li><li>支持多hap/hsp同时安装到OpenHarmony终端设备</li><li>支持设置ArkUI-X框架源码目录，配置后自动关联源码编译产物</li><li>支持联动编译，方便开发者在Android、iOS工程中触发ArkTS编译</li></ul><h2 id="组件的适配" tabindex="-1">组件的适配 <a class="header-anchor" href="#组件的适配" aria-label="Permalink to &quot;组件的适配&quot;">​</a></h2><p>支持XComponent组件跨平台适配，以及Dialog、Toast、contextMenu、Popup适配子窗口。常见的基础组件和容器组件基本都支持，甚至像媒体组件Video，绘制组件Circle、Line、Rect、Path等等，画布组件Canvas等这些都支持跨平台，包括动画、手势、弹窗等等也基本都支持跨平台。这次的更新，基本上能满足我们的日常使用</p><h2 id="api适配" tabindex="-1">API适配 <a class="header-anchor" href="#api适配" aria-label="Permalink to &quot;API适配&quot;">​</a></h2><p>这次对常用的API也做了适配，像我们用的比较多的emitter、EventHub、window设置全屏、状态栏和安全区等、promptAction、picker、media等等，这些API现在都支持跨平台了。</p><p>在API12的基础上，新增加了socket、webSocket、resourceManager、image、taskPool、fs等等常用功能的跨平台支持。</p>',11)]))}const u=e(l,[["render",n]]);export{h as __pageData,u as default};
