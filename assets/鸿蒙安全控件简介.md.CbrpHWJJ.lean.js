import{_ as t,c as e,a0 as o,o as i}from"./chunks/framework.CGHvQLJz.js";const d=JSON.parse('{"title":"鸿蒙安全控件简介","description":"","frontmatter":{},"headers":[],"relativePath":"鸿蒙安全控件简介.md","filePath":"鸿蒙安全控件简介.md","lastUpdated":null}'),l={name:"鸿蒙安全控件简介.md"};function n(r,a,p,c,s,u){return i(),e("div",null,a[0]||(a[0]=[o('<h1 id="鸿蒙安全控件简介" tabindex="-1">鸿蒙安全控件简介 <a class="header-anchor" href="#鸿蒙安全控件简介" aria-label="Permalink to &quot;鸿蒙安全控件简介&quot;">​</a></h1><p>安全控件是系统提供的一组系统实现的ArkUI组件，应用集成这类组件就可以实现在用户点击后自动授权，而无需弹窗授权。它们可以作为一种“特殊的按钮”融入应用页面，实现用户点击即许可的设计思路。</p><p>相较于动态申请权限的方式，安全控件可基于场景化授权，简化开发者和用户的操作，主要优点有：</p><ol><li>用户可掌握授权时机，授权范围最小化。</li><li>授权场景可匹配用户真实意图。</li><li>减少弹窗打扰。</li><li>开发者不必向应用市场申请权限，简化操作。</li></ol><p>安全控件坚持仅采集实现业务功能所必须的个人数据，以服务于用户的需求，帮助开发透明、可选、可控的隐私合规应用。</p><h2 id="安全控件列表" tabindex="-1">安全控件列表 <a class="header-anchor" href="#安全控件列表" aria-label="Permalink to &quot;安全控件列表&quot;">​</a></h2><p>目前系统提供三类安全控件</p><h3 id="粘贴控件-pastebutton" tabindex="-1">粘贴控件（PasteButton） <a class="header-anchor" href="#粘贴控件-pastebutton" aria-label="Permalink to &quot;粘贴控件（PasteButton）&quot;">​</a></h3><p>该控件对应剪贴板读取特权。应用集成粘贴控件后，用户点击该控件，应用读取剪贴板数据时不会弹窗提示。</p><p>建议使用场景：粘贴控件可以用于任何应用需要读取剪贴板的场景，避免弹窗提示对用户造成干扰。</p><h3 id="保存控件-savebutton" tabindex="-1">保存控件（SaveButton） <a class="header-anchor" href="#保存控件-savebutton" aria-label="Permalink to &quot;保存控件（SaveButton）&quot;">​</a></h3><p>该控件对应媒体库写入特权。应用集成保存控件后，用户点击该控件，应用会获取10秒内访问媒体库特权接口的授权。</p><p>建议使用场景：保存控件可以用于任何应用需要保存文件到媒体库的场景（保存图片、保存视频等）。与Picker需要拉起系统应用再由用户选择具体路径保存的方式不同，保存控件将直接保存到指定媒体库路径，操作更快捷。</p><h3 id="位置控件-locationbutton" tabindex="-1">位置控件（LocationButton） <a class="header-anchor" href="#位置控件-locationbutton" aria-label="Permalink to &quot;位置控件（LocationButton）&quot;">​</a></h3><p>该控件对应精准定位特权。应用集成位置控件后，用户点击该控件，无论应用是否申请过或者被授予精准定位权限，都会在本次前台期间获得精准定位的授权，可以调用位置服务获取精准定位。</p><p>建议使用场景：应用不是强位置关联应用（如导航、运动健康等），仅在部分前台场景需要使用位置信息（如定位城市、打卡、分享位置等）。如果需要长时间使用或是在后台使用位置信息，建议申请位置权限。</p><h2 id="运作机制" tabindex="-1">运作机制 <a class="header-anchor" href="#运作机制" aria-label="Permalink to &quot;运作机制&quot;">​</a></h2><p>整体方案由安全控件UI组件、安全控件管理服务、安全控件增强组成：</p><ul><li>UI组件：实现了固定文字图标的样式，便于用户识别，同时提供了相对丰富的定制化能力，便于开发者定制。</li><li>控件管理服务：提供控件注册管理能力、控件临时授权机制、管理授权生效周期，确保应用后台、锁屏下无法注册使用安全控件。</li><li>安全增强：实现了地址随机化、挑战值检查、回调UI框架复核控件信息、调用者地址检查、组件防覆盖、真实点击事件校验等机制，防止应用开发者通过混淆、隐藏、篡改、仿冒等方式滥用授权机制，泄露用户隐私。</li></ul><p>开发者调用接口时，运作流程如图所示。 <img src="https://alliance-communityfile-drcn.dbankcdn.com/FileServer/getFile/cmtyPub/011/111/111/0000000000011111111.20241119164720.58756301295537275830503167380513:50001231000000:2800:0427344D9714B56D29FCCC102157E2FAE476B8928227D76F1BD739018F52A3B2.png?needInitFileName=true" alt="img1"></p><h2 id="约束与限制" tabindex="-1">约束与限制 <a class="header-anchor" href="#约束与限制" aria-label="Permalink to &quot;约束与限制&quot;">​</a></h2><p>安全控件因其自动授权的特性，为了保障用户的隐私不被恶意应用获取，针对安全控件作了很多的限制。应用开发者需保证安全控件在应用界面上清晰可见、用户能明确识别，防止因覆盖、混淆等因素导致授权失败。</p><p>当因控件样式不合法导致授权失败的情况发生时，请开发者检查设备错误日志，过滤关键字&quot;SecurityComponentCheckFail&quot;可以获取具体原因。</p>',23)]))}const m=t(l,[["render",n]]);export{d as __pageData,m as default};
