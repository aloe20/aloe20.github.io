import{_ as s,c as i,a0 as a,o as l}from"./chunks/framework.CGHvQLJz.js";const g=JSON.parse('{"title":"鸿蒙接入Flutter","description":"","frontmatter":{},"headers":[],"relativePath":"鸿蒙接入Flutter.md","filePath":"鸿蒙接入Flutter.md","lastUpdated":null}'),e={name:"鸿蒙接入Flutter.md"};function n(h,t,p,d,r,k){return l(),i("div",null,t[0]||(t[0]=[a(`<h1 id="鸿蒙接入flutter" tabindex="-1">鸿蒙接入Flutter <a class="header-anchor" href="#鸿蒙接入flutter" aria-label="Permalink to &quot;鸿蒙接入Flutter&quot;">​</a></h1><h2 id="配置环境变量" tabindex="-1">配置环境变量 <a class="header-anchor" href="#配置环境变量" aria-label="Permalink to &quot;配置环境变量&quot;">​</a></h2><ol><li>配置HarmonyOS SDK和环境变量</li></ol><ul><li>API12, deveco-studio-5.0 或 command-line-tools-5.0</li><li>配置 Java17</li><li>配置环境变量 (SDK, node, ohpm, hvigor)</li></ul><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> TOOL_HOME</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/Applications/DevEco-Studio.app/Contents </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># mac环境</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DEVECO_SDK_HOME</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$TOOL_HOME/sdk </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># command-line-tools/sdk</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PATH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$TOOL_HOME/tools/ohpm/bin:$PATH </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># command-line-tools/ohpm/bin</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PATH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$TOOL_HOME/tools/hvigor/bin:$PATH </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># command-line-tools/hvigor/bin</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PATH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$TOOL_HOME/tools/node/bin:$PATH </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># command-line-tools/tool/node/bin</span></span></code></pre></div><ol start="2"><li>通过代码工具下载Flutter仓库代码<code>git clone https://gitee.com/harmonycommando_flutter/flutter.git</code>，指定dev或master分支，并配置环境</li></ol><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 依赖缓存</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PUB_CACHE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">D:/PUB</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 拉取下来的flutter_flutter/bin目录</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PATH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">flutter_flutter path</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/bin:$PATH</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 国内镜像</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PUB_HOSTED_URL</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">https://pub.flutter-io.cn</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> FLUTTER_STORAGE_BASE_URL</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">https://storage.flutter-io.cn</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # HamonyOS SDK</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> TOOL_HOME</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/Applications/DevEco-Studio.app/Contents </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># mac环境</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DEVECO_SDK_HOME</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$TOOL_HOME/sdk </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># command-line-tools/sdk</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PATH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$TOOL_HOME/tools/ohpm/bin:$PATH </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># command-line-tools/ohpm/bin</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PATH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$TOOL_HOME/tools/hvigor/bin:$PATH </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># command-line-tools/hvigor/bin</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PATH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$TOOL_HOME/tools/node/bin:$PATH </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># command-line-tools/tool/node/bin</span></span></code></pre></div><h2 id="构建步骤" tabindex="-1">构建步骤 <a class="header-anchor" href="#构建步骤" aria-label="Permalink to &quot;构建步骤&quot;">​</a></h2><ol><li>运行 flutter doctor -v 检查环境变量配置是否正确，Futter与OpenHarmony应都为ok标识，若两处提示缺少环境，按提示补上相应环境即可。 <img src="https://gitee.com/aloe20/harmony_flutter/raw/master/images/code.png" alt="img1"></li><li>创建工程与编译命令，编译产物在<code>&lt;projectName&gt;/ohos/entry/build/default/outputs/default/entry-default-signed.hap</code>下。</li></ol><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 创建工程</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> flutter</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --platforms</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ohos</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">projectNam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 进入工程根目录编译</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 示例：flutter build hap</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> flutter</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> hap</span></span></code></pre></div><ol start="3"><li>通过flutter devices指令发现ohos设备之后，使用 <code>hdc -t &lt;deviceId&gt; install &lt;hap file path&gt;</code>进行安装。</li><li>也可直接使用下列指令运行：</li></ol><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   # 示例：flutter run -d &lt;device-id&gt;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   flutter</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --debug</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">device-i</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><ol start="5"><li>构建app包命令：</li></ol><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 示例：flutter build app --release</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> flutter</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> app</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --release</span></span></code></pre></div><h2 id="已兼容openharmony开发的指令列表" tabindex="-1">已兼容OpenHarmony开发的指令列表 <a class="header-anchor" href="#已兼容openharmony开发的指令列表" aria-label="Permalink to &quot;已兼容OpenHarmony开发的指令列表&quot;">​</a></h2><table tabindex="0"><thead><tr><th style="text-align:left;">指令名称</th><th style="text-align:left;">指令描述</th><th style="text-align:left;">使用说明</th></tr></thead><tbody><tr><td style="text-align:left;">doctor</td><td style="text-align:left;">环境检测</td><td style="text-align:left;">flutter doctor</td></tr><tr><td style="text-align:left;">config</td><td style="text-align:left;">环境配置</td><td style="text-align:left;">flutter config --&quot;key&quot; &quot;value&quot;</td></tr><tr><td style="text-align:left;">create</td><td style="text-align:left;">创建新项目</td><td style="text-align:left;">flutter create --platforms ohos,android,ios --org &quot;org&quot; &quot;appName&quot;</td></tr><tr><td style="text-align:left;">create</td><td style="text-align:left;">创建module模板</td><td style="text-align:left;">flutter create -t module &quot;moduleName&quot;</td></tr><tr><td style="text-align:left;">create</td><td style="text-align:left;">创建plugin模板</td><td style="text-align:left;">flutter create -t plugin --platforms ohos,android,ios &quot;pluginName&quot;</td></tr><tr><td style="text-align:left;">create</td><td style="text-align:left;">创建plugin_ffi模板</td><td style="text-align:left;">flutter create -t plugin_ffi --platforms ohos,android,ios &quot;pluginName&quot;</td></tr><tr><td style="text-align:left;">devices</td><td style="text-align:left;">已连接设备查找</td><td style="text-align:left;">flutter devices</td></tr><tr><td style="text-align:left;">install</td><td style="text-align:left;">应用安装</td><td style="text-align:left;">flutter install -t &quot;deviceId&quot; &quot;hap文件路径&quot;</td></tr><tr><td style="text-align:left;">assemble</td><td style="text-align:left;">资源打包</td><td style="text-align:left;">flutter assemble</td></tr><tr><td style="text-align:left;">build</td><td style="text-align:left;">测试应用构建</td><td style="text-align:left;">flutter build hap --debug</td></tr><tr><td style="text-align:left;">build</td><td style="text-align:left;">正式应用构建</td><td style="text-align:left;">flutter build hap --release</td></tr><tr><td style="text-align:left;">run</td><td style="text-align:left;">应用运行</td><td style="text-align:left;">flutter run</td></tr><tr><td style="text-align:left;">attach</td><td style="text-align:left;">调试模式</td><td style="text-align:left;">flutter attach</td></tr><tr><td style="text-align:left;">screenshot</td><td style="text-align:left;">截屏</td><td style="text-align:left;">flutter screenshot</td></tr></tbody></table><p>附：<a href="https://docs.qq.com/sheet/DVVJDWWt1V09zUFN2" target="_blank" rel="noreferrer">Flutter三方库适配计划</a></p><h2 id="运行到手机上" tabindex="-1">运行到手机上 <a class="header-anchor" href="#运行到手机上" aria-label="Permalink to &quot;运行到手机上&quot;">​</a></h2><p>在项目根目录下执行<code>flutter run</code>就可以运行到手机上了，若连接的是Android手机，则可以直接运行并在手机上查看效果。若连接的是鸿蒙NEXT手机，则需先配置证书，配置证书的地方在<code>ohos/build-profile.json5</code>文件中，证书配置完成后，就直接直接运行并在鸿蒙NEXT手机上查看效果了。 <img src="https://gitee.com/aloe20/harmony_flutter/raw/master/images/harmony.jpeg" alt="harmony"><img src="https://gitee.com/aloe20/harmony_flutter/raw/master/images/android.png" alt="android"> 鸿蒙平台ohos下的flutter.har包可以拷贝到其它项目中直接使用。</p><ul><li><a href="https://gitee.com/aloe20/harmony_flutter" target="_blank" rel="noreferrer">本示例源码详见gitee</a></li></ul>`,20)]))}const y=s(e,[["render",n]]);export{g as __pageData,y as default};
