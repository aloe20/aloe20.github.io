import{_ as s,c as a,a0 as e,o as l}from"./chunks/framework.CGHvQLJz.js";const o=JSON.parse('{"title":"鸿蒙无权限实现图片选择拍照和录视频","description":"","frontmatter":{},"headers":[],"relativePath":"鸿蒙无权限实现图片选择拍照和录视频.md","filePath":"鸿蒙无权限实现图片选择拍照和录视频.md","lastUpdated":null}'),n={name:"鸿蒙无权限实现图片选择拍照和录视频.md"};function t(p,i,h,k,r,E){return l(),a("div",null,i[0]||(i[0]=[e(`<h1 id="鸿蒙无权限实现图片选择拍照和录视频" tabindex="-1">鸿蒙无权限实现图片选择拍照和录视频 <a class="header-anchor" href="#鸿蒙无权限实现图片选择拍照和录视频" aria-label="Permalink to &quot;鸿蒙无权限实现图片选择拍照和录视频&quot;">​</a></h1><p>在鸿蒙开发中，系统提供了PhotoViewPicker选择图片，cameraPicker拍照和录视频，此方式能够达到无需向用户申请权限就能选图片、拍照和录视频。除了用户操作的选图、拍照和录视频，其它时间APP无权获取相册图片，无权调用相机，对于用户来说，使用相册和相机都是很明确的时机，安全性非常高。以下来看看具体的使用方式。</p><h2 id="使用photoviewpicker选择图片" tabindex="-1">使用PhotoViewPicker选择图片 <a class="header-anchor" href="#使用photoviewpicker选择图片" aria-label="Permalink to &quot;使用PhotoViewPicker选择图片&quot;">​</a></h2><p>我们new一个PhotoViewPicker并调用select方法，就可以打开系统图片选择器进行图片选择了，支持的参数非常多，基本满足了日常的使用场景。</p><ul><li>MIMEType：我们可以通过MIMEType来设置是选择图片或者选择视频，甚至是同时选择图片和视频。</li><li>isEditSupported：通过isEditSupported参数来设置选择好图片后，是否进入图片编辑模式。</li><li>isOriginalSupported：通过isOriginalSupported参数来设置选择的图片是否为源图，该参数设置为true，选择页面有一个按钮，可以控制是否使用源图。</li><li>isPhotoTakingSupported：在图片选择页面，可以通过isPhotoTakingSupported参数设置第一个位置是否为拍照选项，设置后点击第一个位置，可以打开相机拍摄一张图片。</li><li>isPreviewForSingleSelectionSupported：通过isPreviewForSingleSelectionSupported参数可以在图片选择后，进入大图预览页面，使我们能够查看图片的更多细节。</li><li>isSearchSupported：当相册的图片太多时，我们可以通过isSearchSupported参数显示搜索框，在搜索框中输入图片相关内容，以便快速查找相关图片</li><li>maxSelectNumber：通过maxSelectNumber来设置选择的数量，默认选择50张图片，最多选择500张。</li><li>preselectedUris：当为多选模式时，通过preselectedUris参数可以预选中一些图片，以便避免每次打开图片选择器，都是重新选择，从而导致之前选择的图片丢失了。 一个完整的示例如下</li></ul><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> photoAccessHelper.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">PhotoViewPicker</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">select</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  MIMEType: photoAccessHelper.PhotoViewMIMETypes.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">IMAGE_TYPE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  maxSelectNumber: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">9</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  isEditSupported: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  isOriginalSupported: rue,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  preselectedUris: [],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  isPhotoTakingSupported: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  isPreviewForSingleSelectionSupported: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  isSearchSupported: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">err</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">data</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(data)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><h2 id="使用camerapicker拍照和录视频" tabindex="-1">使用cameraPicker拍照和录视频 <a class="header-anchor" href="#使用camerapicker拍照和录视频" aria-label="Permalink to &quot;使用cameraPicker拍照和录视频&quot;">​</a></h2><p>我们可以通过cameraPicker的select方法来进行拍照或录视频，也可以同时设置拍照和录视频，用户在拍照页面自行选择是拍照还是录视频。具体使用参数如下</p><ul><li>mediaTypes：是一个数组，设置为拍照片，还是录视频，也可以同时设置</li><li>cameraPosition：设置是使用前置摄像头还是后置摄像头进行拍照或录视频</li><li>saveUri：设置拍照或录制的视频保存的位置，通常设置成我们的沙箱目录</li><li>videoDuration：当模式为录视频时，此参数为设置视频的最大时长。 一个完整的示例如下</li></ul><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cameraPicker.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pick</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(context,[cameraPicker.PickerMediaType.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PHOTO</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, cameraPicker.PickerMediaType.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">VIDEO</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  { cameraPosition: camera.CameraPosition.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">CAMERA_POSITION_BACK</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,saveUri:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,videoDuration:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">then</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(value.resultUri)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  })</span></span></code></pre></div><p>用户在系统拍照录视频页面，可以自己选择很多参数，例如是否打开闪光灯，图片的宽高比，视频的帧率，是否撕开参考线等等，可选择的参数很多，灵活度也很高，基本可以满足日常的使用场景，最主要的是不用向用户申请权限，还是非常方便的。</p>`,11)]))}const c=s(n,[["render",t]]);export{o as __pageData,c as default};
