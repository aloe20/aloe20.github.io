import{_ as i,c as a,a0 as n,o as p}from"./chunks/framework.CGHvQLJz.js";const d=JSON.parse('{"title":"鸿蒙Navigation处理启动页跳转到首页问题","description":"","frontmatter":{},"headers":[],"relativePath":"鸿蒙Navigation处理启动页跳转到首页问题.md","filePath":"鸿蒙Navigation处理启动页跳转到首页问题.md"}'),l={name:"鸿蒙Navigation处理启动页跳转到首页问题.md"};function t(h,s,k,e,E,r){return p(),a("div",null,s[0]||(s[0]=[n(`<h1 id="鸿蒙navigation处理启动页跳转到首页问题" tabindex="-1">鸿蒙Navigation处理启动页跳转到首页问题 <a class="header-anchor" href="#鸿蒙navigation处理启动页跳转到首页问题" aria-label="Permalink to &quot;鸿蒙Navigation处理启动页跳转到首页问题&quot;">​</a></h1><p>在使用Navigation时时，你是否遇到了这样一个问题，Navigation加载启动页为入口，在启动页replace到首页，使首页替换换启动页，结果发现不生效，启动页依然存在。</p><h2 id="为什么根页面启动页不能直接替换成首页" tabindex="-1">为什么根页面启动页不能直接替换成首页 <a class="header-anchor" href="#为什么根页面启动页不能直接替换成首页" aria-label="Permalink to &quot;为什么根页面启动页不能直接替换成首页&quot;">​</a></h2><p>我们验证后发现当页面是Navigation的子页面时，是可以使用replace替换，当要替换根页面时，却发现不生产，这是因为我们使用NavPathStack只能操作子页面，根页面不在操作范围内，NavPathStack也不能操作根页面。所以不管是用replace，还是先push，再pop启动页，都是不生效的。</p><h2 id="在navigation中如何将启动页替换成首页" tabindex="-1">在Navigation中如何将启动页替换成首页 <a class="header-anchor" href="#在navigation中如何将启动页替换成首页" aria-label="Permalink to &quot;在Navigation中如何将启动页替换成首页&quot;">​</a></h2><p>直接替换行不通，这里也有其它几种方式，第一种是Navigation根页面设置成首页，启动页跳到首页使用router的方式来处理。这种方式是可行的，但总觉得不是那么的完美，我都用Navigation了，为什么还要用router呢，官方一再强调不推荐使用router，推荐使用navigation。所以我们还有其它方式吗？</p><p>直接用Navigation替换不行，那我们自己手动来替换总行吧，在Navigation根页面加一个标签，首先加载启动页，然后更改标签的值，再去显示首页。我们以V2状态管理为例</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@Entry</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@ComponentV2</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">struct Index {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  @Local </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isShowHome</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: boolean </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  build</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    Navigation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.isShowHome) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        HomePage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        SplashPage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">          onChangePage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.isShowHome </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@ComponentV2</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> struct SplashPage {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  @Event onChangePage: VoidCallback = () =&gt; undefined</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  aboutToAppear(): void {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    setTimeout(() =&gt; {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        this.onChangePage()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      }, 1000)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  build</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    Stack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;100%&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">height</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;100%&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@ComponentV2</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> struct HomePage {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  build() {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Stack().width(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;100%&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).height(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;100%&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>我们在启动页中使用@Event定义一个onChangePage事件，延时1秒后通知Navigation将根页面切换成首页。</p><p>这种方式虽然也可以，但总觉得还要手动通过if来切换页面，不是那么的优雅。为什么不能统一用NavPathStack来切换页面呢？不知道Navigation这么设计的原因是什么，不过大家想把启动页和首页也放在Navigation中统一管理，可以使用HMRouter这个三方库来处理，HMRouter是对Navigation做了封装，完成兼容Navigation。这几种方式都不太完美，要是需要单独特殊处理，要么需要引入三方库，大家结合自己的实际情况来选择吧。</p>`,10)]))}const o=i(l,[["render",t]]);export{d as __pageData,o as default};
