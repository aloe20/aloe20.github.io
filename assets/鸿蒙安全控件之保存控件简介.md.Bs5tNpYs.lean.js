import{_ as a,c as s,a0 as t,o as e}from"./chunks/framework.CGHvQLJz.js";const c=JSON.parse('{"title":"鸿蒙安全控件之保存控件简介","description":"","frontmatter":{},"headers":[],"relativePath":"鸿蒙安全控件之保存控件简介.md","filePath":"鸿蒙安全控件之保存控件简介.md","lastUpdated":null}'),l={name:"鸿蒙安全控件之保存控件简介.md"};function n(r,i,p,h,o,d){return e(),s("div",null,i[0]||(i[0]=[t(`<h1 id="鸿蒙安全控件之保存控件简介" tabindex="-1">鸿蒙安全控件之保存控件简介 <a class="header-anchor" href="#鸿蒙安全控件之保存控件简介" aria-label="Permalink to &quot;鸿蒙安全控件之保存控件简介&quot;">​</a></h1><p>保存控件是一种特殊的安全控件，它允许用户通过点击按钮临时获取存储权限，而无需通过权限弹框进行授权确认。</p><p>集成保存控件后，当用户点击该控件时，应用会获得10秒内访问媒体库特权接口的授权。这适用于任何需要将文件保存到媒体库的应用场景，例如保存图片或视频等。</p><p>与需要触发系统应用并由用户选择具体保存路径的Picker不同，保存控件可以直接保存到指定的媒体库路径，使得操作更为便捷。</p><p>保存控件效果如图所示。 <img src="https://alliance-communityfile-drcn.dbankcdn.com/FileServer/getFile/cmtyPub/011/111/111/0000000000011111111.20241119164720.76138234306923604674506587421458:50001231000000:2800:6D4E9A0B07FF6267CC6283403574D7E419446D565B936311289A2FAA0DC4F03E.png?needInitFileName=true" alt="img1"></p><h2 id="约束与限制" tabindex="-1">约束与限制 <a class="header-anchor" href="#约束与限制" aria-label="Permalink to &quot;约束与限制&quot;">​</a></h2><ul><li>当用户首次点击应用中的保存控件，系统将弹窗请求用户授权。如果用户点击“取消”，弹窗消失，应用无授权，用户再次点击保存控件时，将会重新弹窗；如果用户点击“允许”，弹窗消失，应用将被授予临时保存权限，此后点击该应用的保存控件将不会弹窗。</li><li>应用在onClick()触发回调到调用媒体库特权接口的时间间隔不能大于10秒。</li><li>用户点击一次控件，仅获取一次授权调用。</li><li>为了保障用户的隐私不被恶意应用获取，应用需确保安全控件是可见的且用户能够识别的。开发者需要合理的配置控件的尺寸、颜色等属性，避免视觉混淆的情况，如果发生因控件的样式不合法导致授权失败的情况，请检查设备错误日志。</li></ul><h2 id="开发步骤" tabindex="-1">开发步骤 <a class="header-anchor" href="#开发步骤" aria-label="Permalink to &quot;开发步骤&quot;">​</a></h2><p>以保存对话中图片为例，应用仅需要在前台期间，短暂使用保存图片的特性，不需要长时间使用。此时，可以直接使用安全控件中的保存控件，免去权限申请和权限请求等环节，获得临时授权，保存对应图片。</p><ol><li>导入文件和媒体库依赖。</li></ol><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { photoAccessHelper } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@kit.MediaLibraryKit&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { fileIo } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@kit.CoreFileKit&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><ol start="2"><li>设置图片资源，并添加保存控件。 保存控件是一种类似于按钮的安全控件，由图标、文本和背景组成。其中，图标和文本至少需要有一个，背景是必选的。图标和文本不能自定义，只能从已有的选项中选择。在声明安全控件的接口时，有传参和不传参两种方式。不传参将默认创建一个包含图标、文字和背景的按钮，传参则根据参数创建，不包含未配置的元素。</li></ol>`,12)]))}const m=a(l,[["render",n]]);export{c as __pageData,m as default};
