import{_ as i,c as t,a0 as s,o as e}from"./chunks/framework.CGHvQLJz.js";const d=JSON.parse('{"title":"鸿蒙高质量代码静态检测200条二","description":"","frontmatter":{},"headers":[],"relativePath":"鸿蒙高质量代码静态检测200条二.md","filePath":"鸿蒙高质量代码静态检测200条二.md","lastUpdated":null}'),r={name:"鸿蒙高质量代码静态检测200条二.md"};function o(a,l,n,u,p,c){return e(),t("div",null,l[0]||(l[0]=[s(`<h1 id="鸿蒙高质量代码静态检测200条二" tabindex="-1">鸿蒙高质量代码静态检测200条二 <a class="header-anchor" href="#鸿蒙高质量代码静态检测200条二" aria-label="Permalink to &quot;鸿蒙高质量代码静态检测200条二&quot;">​</a></h1><ol start="52"><li>@typescript-eslint/no-unnecessary-type-arguments</li></ol><ul><li>当类型参数和默认值相同时，不允许显式使用</li></ul><ol start="53"><li>@typescript-eslint/no-unnecessary-type-assertion</li></ol><ul><li>禁止不必要的类型断言</li></ul><ol start="54"><li>@typescript-eslint/no-unnecessary-type-constraint</li></ol><ul><li>不允许在泛型中使用不必要的约束条件</li></ul><ol start="55"><li>@typescript-eslint/no-unused-expressions</li></ol><ul><li>代码中禁止包含未使用的表达式</li></ul><ol start="56"><li>@typescript-eslint/no-unused-vars</li></ol><ul><li>禁止定义未使用的变量</li></ul><ol start="57"><li>@typescript-eslint/no-useless-constructor</li></ol><ul><li>禁止不必要的构造函数</li></ul><ol start="58"><li>@typescript-eslint/prefer-enum-initializers</li></ol><ul><li>推荐显式初始化每个枚举成员值</li></ul><ol start="59"><li>@typescript-eslint/prefer-for-of</li></ol><ul><li>强制使用“for-of”循环而不是标准“for”循环</li></ul><ol start="60"><li>@typescript-eslint/prefer-function-type</li></ol><ul><li>强制使用函数类型而不是带有签名的对象类型</li></ul><ol start="61"><li>@typescript-eslint/prefer-includes</li></ol><ul><li>强制使用“includes”方法而不是“indexOf”方法</li></ul><ol start="62"><li>@typescript-eslint/prefer-nullish-coalescing</li></ol><ul><li>强制使用空合并运算符（??）而不是逻辑运算符</li></ul><ol start="63"><li>@typescript-eslint/prefer-optional-chain</li></ol><ul><li>强制使用链式可选表达式，而不是链式逻辑与、否定逻辑或、或空对象</li></ul><ol start="64"><li>@typescript-eslint/prefer-readonly</li></ol><ul><li>如果私有成员从未在构造函数之外进行修改，则要求将其标记为“只读”</li></ul><ol start="65"><li>@typescript-eslint/prefer-readonly-parameter-types</li></ol><ul><li>要求将函数参数解析为“只读”类型，以防止参数被修改而产生一些副作用</li></ul><ol start="66"><li>@typescript-eslint/prefer-reduce-type-parameter</li></ol><ul><li>调用“Array#reduce”时推荐使用类型参数而不是强制转换类型</li></ul><ol start="67"><li>@typescript-eslint/prefer-regexp-exec</li></ol><ul><li>如果未提供全局标志，推荐使用RegExp#exec”，而不是“String#match”</li></ul><ol start="68"><li>@typescript-eslint/prefer-string-starts-ends-with</li></ol><ul><li>强制使用“String#startsWith”和“String#endsWith”而不是其他检查子字符串的等效方法</li></ul><ol start="69"><li>@typescript-eslint/promise-function-async</li></ol><ul><li>要求任何返回Promise的函数或方法标记为async</li></ul><ol start="70"><li>@typescript-eslint/quotes</li></ol><ul><li>强制使用一致的反引号、双引号或单引号风格</li></ul><ol start="71"><li>@typescript-eslint/require-array-sort-compare</li></ol><ul><li>要求调用“Array#sort”时，始终提供“compareFunction”</li></ul><ol start="72"><li>@typescript-eslint/require-await</li></ol><ul><li>异步函数必须包含“await”</li></ul><ol start="73"><li>@typescript-eslint/restrict-plus-operands</li></ol><ul><li>要求加法的两个操作数都是相同的类型，并且是“bigint”、“number”或“string”</li></ul><ol start="74"><li>@typescript-eslint/restrict-template-expressions</li></ol><ul><li>要求模板表达式中的变量为“string”类型</li></ul><ol start="75"><li>@typescript-eslint/return-await</li></ol><ul><li>要求异步函数返回“await”</li></ul><ol start="76"><li>@typescript-eslint/semi</li></ol><ul><li>要求或不允许使用分号，例如never不允许使用分号，always允许使用分号</li></ul><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;@typescript-eslint/semi&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;error&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;never&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre></div><ol start="77"><li>@typescript-eslint/space-before-function-paren</li></ol><ul><li>强制在函数名和括号之间保持一致的空格风格</li></ul><ol start="78"><li>@typescript-eslint/space-infix-ops</li></ol><ul><li>运算符前后要求有空格</li></ul><ol start="79"><li>@typescript-eslint/strict-boolean-expressions</li></ol><ul><li>不允许在布尔表达式中使用非布尔类型</li></ul><ol start="80"><li>@typescript-eslint/switch-exhaustiveness-check</li></ol><ul><li>要求switch语句对于联合类型中值的判断是详尽无遗的</li></ul><ol start="81"><li>@typescript-eslint/triple-slash-reference</li></ol><ul><li>不允许某些三斜杠引用，推荐使用ES6风格的导入声明</li></ul><ol start="82"><li>@typescript-eslint/type-annotation-spacing</li></ol><ul><li>类型注释前后需要一致的空格风格</li></ul><ol start="83"><li>@typescript-eslint/typedef</li></ol><ul><li>在某些位置需要类型注释</li></ul><ol start="84"><li>@typescript-eslint/unbound-method</li></ol><ul><li>强制类作用域中的方法在预期范围内调用</li></ul><ol start="85"><li>@typescript-eslint/unified-signatures</li></ol><ul><li>如果两个重载函数可以用联合类型参数（|）、可选参数（?）或者剩余参数（...）来重构成一个函数，不允许使用重载</li></ul><ol start="86"><li>prefer-const</li></ol><ul><li>推荐声明后未修改值的变量用const关键字来声明</li></ul><ol start="87"><li>eqeqeq</li></ol><ul><li>要求使用===和!==</li></ul><ol start="88"><li>@security/no-commented-code</li></ol><ul><li>不使用的代码段建议直接删除，不允许通过注释的方式保留</li></ul><ol start="89"><li>@security/no-cycle</li></ol><ul><li>禁止使用循环依赖</li></ul><ol start="90"><li>@security/no-unsafe-aes</li></ol><ul><li>该规则禁止在AES加密算法中使用不安全的ECB加密模式，推荐使用Petal Aegis SDK中的安全AES接口</li></ul><ol start="91"><li>@security/no-unsafe-dh</li></ol><ul><li>该规则禁止使用不安全的DH密钥协商算法</li></ul><ol start="92"><li>@security/no-unsafe-dh-key</li></ol><ul><li>该规则禁止使用不安全的DH密钥</li></ul><ol start="93"><li>@security/no-unsafe-dsa</li></ol><ul><li>该规则禁止使用不安全的DSA签名算法</li></ul><ol start="94"><li>@security/no-unsafe-dsa-key</li></ol><ul><li>该规则禁止使用不安全的DSA密钥</li></ul><ol start="95"><li>@security/no-unsafe-ecdsa</li></ol><ul><li>该规则禁止在ECDSA签名算法中使用不安全的SHA1摘要算法，推荐使用Petal Aegis SDK中的安全ECDSA接口</li></ul><ol start="96"><li>@security/no-unsafe-hash</li></ol><ul><li>该规则使用禁止不安全的哈希算法</li></ul><ol start="97"><li>@security/no-unsafe-mac</li></ol><ul><li>该规则禁止在MAC消息认证算法中使用不安全的哈希算法</li></ul><ol start="98"><li>@security/no-unsafe-rsa-encrypt</li></ol><ul><li>该规则禁止使用不安全的RSA非对称加密算法</li></ul><ol start="99"><li>@security/no-unsafe-rsa-key</li></ol><ul><li>该规则禁止使用不安全的RSA密钥</li></ul><ol start="100"><li>@security/no-unsafe-rsa-sign</li></ol><ul><li>该规则禁止不安全的RSA签名算法</li></ul><ol start="101"><li>@performance/high-frequency-log-check</li></ol><ul><li>不建议在高频函数中使用Hilog</li></ul>`,102)]))}const h=i(r,[["render",o]]);export{d as __pageData,h as default};
