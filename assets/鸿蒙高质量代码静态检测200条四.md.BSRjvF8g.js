import{_ as i,c as t,a0 as s,o as e}from"./chunks/framework.CGHvQLJz.js";const d=JSON.parse('{"title":"鸿蒙高质量代码静态检测200条四","description":"","frontmatter":{},"headers":[],"relativePath":"鸿蒙高质量代码静态检测200条四.md","filePath":"鸿蒙高质量代码静态检测200条四.md","lastUpdated":null}'),o={name:"鸿蒙高质量代码静态检测200条四.md"};function r(a,l,n,u,c,p){return e(),t("div",null,l[0]||(l[0]=[s('<h1 id="鸿蒙高质量代码静态检测200条四" tabindex="-1">鸿蒙高质量代码静态检测200条四 <a class="header-anchor" href="#鸿蒙高质量代码静态检测200条四" aria-label="Permalink to &quot;鸿蒙高质量代码静态检测200条四&quot;">​</a></h1><ol start="153"><li>@cross-device-app-dev/font-size</li></ol><ul><li>字体大小要求至少为8fp以便于阅读</li></ul><ol start="154"><li>@cross-device-app-dev/grid-columns-span</li></ol><ul><li>不推荐开发者将栅格中所有的GridCol子组件只设置span属性，且值与父组件的columns属性相等</li></ul><ol start="155"><li>@cross-device-app-dev/grid-span-value</li></ol><ul><li>在栅格布局组件GridCol中，span和offset不建议使用小数</li></ul><ol start="156"><li>@cross-device-app-dev/size-unit</li></ol><ul><li>组件通用属性width、height和size，应当使用vp作为单位</li></ul><ol start="157"><li>@cross-device-app-dev/touch-target-size</li></ol><ul><li>组件通用属性responseRegion点击热区需满足最小尺寸要求</li></ul><ol start="158"><li>@cross-device-app-dev/sidebar-navigation</li></ol><ul><li>对于2in1和tablet设备，应将Tabs组件设置为侧边导航栏</li></ul><ol start="159"><li>@cross-device-app-dev/color-contrast</li></ol><ul><li>文本和背景之间的颜色对比度至少为4.5:1以确保可读性</li></ul><ol start="160"><li>@hw-stylistic/array-bracket-spacing</li></ol><ul><li>强制数组“[”之后和“]”之前加空格</li></ul><ol start="161"><li>@hw-stylistic/brace-style</li></ol><ul><li>强制大括号和语句位于同一行</li></ul><ol start="162"><li>@hw-stylistic/comma-spacing</li></ol><ul><li>强制数组元素和函数中多个参数之间的逗号后面加空格，逗号前不加空格</li></ul><ol start="163"><li>@hw-stylistic/curly</li></ol><ul><li>条件语句和循环语句的逻辑代码必须写在大括号中</li></ul><ol start="164"><li>@hw-stylistic/file-naming-convention</li></ol><ul><li>强制代码文件和资源文件保持一致的命名风格</li></ul><ol start="165"><li>@hw-stylistic/indent</li></ol><ul><li>强制switch语句中的case和default缩进一层</li></ul><ol start="166"><li>@hw-stylistic/keyword-spacing</li></ol><ul><li>在关键字前后强制加空格</li></ul><ol start="167"><li>@hw-stylistic/max-len</li></ol><ul><li>强制代码行最大长度为120个字符</li></ul><ol start="168"><li>@hw-stylistic/no-multi-spaces</li></ol><ul><li>不允许出现连续多个空格，除非是换行</li></ul><ol start="169"><li>@hw-stylistic/no-tabs</li></ol><ul><li>禁止使用tab作为缩进，推荐使用空格</li></ul><ol start="170"><li>@hw-stylistic/object-property-newline</li></ol><ul><li>强制对象属性换行</li></ul><ol start="171"><li>@hw-stylistic/one-var-declaration-per-line</li></ol><ul><li>变量声明时，要求一次仅声明一个变量</li></ul><ol start="172"><li>@hw-stylistic/operator-linebreak</li></ol><ul><li>强制运算符位于代码行末</li></ul><ol start="173"><li>@hw-stylistic/quotes</li></ol><ul><li>强制字符串使用单引号</li></ul><ol start="174"><li>@hw-stylistic/semi-spacing</li></ol><ul><li>强制分号之前不加空格</li></ul><ol start="175"><li>@hw-stylistic/space-before-blocks</li></ol><ul><li>强制在“{”之前加空格</li></ul><ol start="176"><li>@hw-stylistic/space-before-function-paren</li></ol><ul><li>在函数名和“(”之间强制不加空格</li></ul><ol start="177"><li>hw-stylistic/space-infix-ops</li></ol><ul><li>强制运算符前后都加空格</li></ul><ol start="178"><li>@typescript-eslint/consistent-indexed-object-style</li></ol><ul><li>允许或禁止使用“Record”类型，仅适用于js/ts</li></ul><ol start="179"><li>@typescript-eslint/consistent-type-definitions</li></ol><ul><li>强制使用一致的类型声明样式，仅使用“interface”或者仅使用“type”，仅适用于js/ts</li></ul><ol start="180"><li>@typescript-eslint/consistent-type-imports</li></ol><ul><li>强制使用一致的类型导入风格，仅适用于js/ts</li></ul><ol start="181"><li>@typescript-eslint/dot-notation</li></ol><ul><li>强制使用点表示法，仅适用于js/ts</li></ul><ol start="182"><li>@typescript-eslint/explicit-function-return-type</li></ol><ul><li>函数和类方法需要显式的定义返回类型，仅适用于js/ts</li></ul><ol start="183"><li>@typescript-eslint/explicit-module-boundary-types</li></ol><ul><li>导出到外部的函数和公共类方法，需要显式的定义返回类型和参数类型，仅适用于js/ts</li></ul><ol start="184"><li>@typescript-eslint/method-signature-style</li></ol><ul><li>定义函数类型的属性时，强制使用特定的风格，仅适用于js/ts</li></ul><ol start="185"><li>@typescript-eslint/no-dynamic-delete</li></ol><ul><li>不允许在computed key表达式上使用“delete”运算符，仅适用于js/ts</li></ul><ol start="186"><li>@typescript-eslint/no-explicit-any</li></ol><ul><li>不允许使用“any”类型，仅适用于js/ts</li></ul><ol start="187"><li>@typescript-eslint/no-for-in-array</li></ol><ul><li>禁止使用 for-in 循环来遍历数组元素，仅适用于js/ts</li></ul><ol start="188"><li>@typescript-eslint/no-implicit-any-catch</li></ol><ul><li>禁止在 catch 表达式中使用隐式“any”类型，仅适用于js/ts</li></ul><ol start="189"><li>@typescript-eslint/no-loop-func</li></ol><ul><li>禁止在循环语句内包含不安全引用的函数声明，仅适用于js/ts</li></ul><ol start="190"><li>@typescript-eslint/no-namespace</li></ol><ul><li>禁止使用 TypeScript语法中的命名空间，仅适用于js/ts</li></ul><ol start="191"><li>@typescript-eslint/no-parameter-properties</li></ol><ul><li>禁止在类构造函数中使用参数属性，仅适用于js/ts</li></ul><ol start="192"><li>@typescript-eslint/no-this-alias</li></ol><ul><li>禁止将“this”赋值给一个变量，仅适用于js/ts</li></ul><ol start="193"><li>@typescript-eslint/no-type-alias</li></ol><ul><li>禁止使用类型别名，仅适用于js/ts</li></ul><ol start="194"><li>@typescript-eslint/no-unsafe-argument</li></ol><ul><li>不允许将any类型的值作为函数的参数传入，仅适用于js/ts</li></ul><ol start="195"><li>@typescript-eslint/no-unsafe-assignment</li></ol><ul><li>禁止将“any”类型的值赋值给变量和属性，仅适用于js/ts</li></ul><ol start="196"><li>@typescript-eslint/no-unsafe-call</li></ol><ul><li>禁止调用“any”类型的表达式，仅适用于js/ts</li></ul><ol start="197"><li>@typescript-eslint/no-unsafe-member-access</li></ol><ul><li>禁止成员访问“any”类型的值，仅适用于js/ts</li></ul><ol start="198"><li>@typescript-eslint/no-unsafe-return</li></ol><ul><li>函数禁止返回类型为“any”的值，仅适用于js/ts</li></ul><ol start="199"><li>@typescript-eslint/no-use-before-define</li></ol><ul><li>禁止在变量声明之前使用变量，仅适用于js/ts</li></ul><ol start="200"><li>@typescript-eslint/prefer-as-const</li></ol><ul><li>对于字面量类型，强制使用“as const”，仅适用于js/ts</li></ul><ol start="201"><li>@typescript-eslint/prefer-literal-enum-member</li></ol><ul><li>要求所有枚举成员都定义为字面量值，仅适用于js/ts</li></ul><ol start="202"><li>@typescript-eslint/prefer-ts-expect-error</li></ol><ul><li>强制使用“@ts-expect-error”而不是“@ts-ignore”，仅适用于js/ts</li></ul><ol start="203"><li>@performance/hp-performance-no-dynamic-cls-func</li></ol><ul><li>避免动态声明function与class，仅适用于js/ts</li></ul>',103)]))}const f=i(o,[["render",r]]);export{d as __pageData,f as default};
