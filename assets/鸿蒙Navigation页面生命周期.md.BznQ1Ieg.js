import{_ as i,c as t,a0 as n,o}from"./chunks/framework.CGHvQLJz.js";const D=JSON.parse('{"title":"鸿蒙Navigation页面生命周期","description":"","frontmatter":{},"headers":[],"relativePath":"鸿蒙Navigation页面生命周期.md","filePath":"鸿蒙Navigation页面生命周期.md","lastUpdated":null}'),e={name:"鸿蒙Navigation页面生命周期.md"};function l(p,a,s,r,v,d){return o(),t("div",null,a[0]||(a[0]=[n('<h1 id="鸿蒙navigation页面生命周期" tabindex="-1">鸿蒙Navigation页面生命周期 <a class="header-anchor" href="#鸿蒙navigation页面生命周期" aria-label="Permalink to &quot;鸿蒙Navigation页面生命周期&quot;">​</a></h1><p>Navigation作为路由容器，其生命周期承载在NavDestination组件上，以组件事件的形式开放。其生命周期大致可分为三类，自定义组件生命周期、通用组件生命周期和自有生命周期。其中，aboutToAppear和aboutToDisappear是自定义组件的生命周期(NavDestination外层包含的自定义组件)，OnAppear和OnDisappear是组件的通用生命周期。剩下的六个生命周期为NavDestination独有。生命周期时序如下图所示 <img src="https://alliance-communityfile-drcn.dbankcdn.com/FileServer/getFile/cmtyPub/011/111/111/0000000000011111111.20241105123336.36875494552096754383107140447849:50001231000000:2800:F7659AA286018599BDFA33C4C2B4D86C75AD22353673191986FBA4BBED976059.png" alt="img1"></p><ul><li>aboutToAppear：在创建自定义组件后，执行其build()函数之前执行（NavDestination创建之前），允许在该方法中改变状态变量，更改将在后续执行build()函数中生效。</li><li>onWillAppear：NavDestination创建后，挂载到组件树之前执行，在该方法中更改状态变量会在当前帧显示生效。</li><li>onAppear：通用生命周期事件，NavDestination组件挂载到组件树时执行。</li><li>onWillShow：NavDestination组件布局显示之前执行，此时页面不可见（应用切换到前台不会触发）。</li><li>onShown：NavDestination组件布局显示之后执行，此时页面已完成布局。</li><li>onWillHide：NavDestination组件触发隐藏之前执行（应用切换到后台不会触发）。</li><li>onHidden：NavDestination组件触发隐藏后执行（非栈顶页面push进栈，栈顶页面pop出栈或应用切换到后台）。</li><li>onWillDisappear：NavDestination组件即将销毁之前执行，如果有转场动画，会在动画前触发（栈顶页面pop出栈）。</li><li>onDisappear：通用生命周期事件，NavDestination组件从组件树上卸载销毁时执行。</li><li>aboutToDisappear：自定义组件析构销毁之前执行，不允许在该方法中改变状态变量。</li></ul>',3)]))}const N=i(e,[["render",l]]);export{D as __pageData,N as default};
